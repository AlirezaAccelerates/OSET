clear
close all
clc

fname = 'sample';
load(fname, 'sampling_rate', 'channel_names');

% Load the data from the CSV file to have a similar quantization effect
sample_raw = importdata('sample_raw.csv');
signal = sample_raw.data';


% QUANTIZE THE DATA AND CONVERT IT TO WFDB FORMAT USING mat2wfdb

% Set parameters for data quantization and analysis
params.plot_mode = 'noplots';  % 'samples' or 'errors' or 'noplots'
method = 'max_scale';  % 'max_scale' or 'tanh_sat' or 'clip'
params.quant_bits = 16;  % 8/16/32/64 fixed-point representation
params.remove_mean = true;%%%%%%%%%true;
% Perform data quantization and analysis
[signal_quant, bias, gains, max_amp, snr, snr_med, num_quant_levs] = DataScalingQuantization(signal, method, params);
baseline = int16(round(bias.*gains));

% Save the gains to be used by the other tools (for exact comparison)
gain_csv = [fname '_gain.csv'];
writematrix(gains, gain_csv);

% Save the baseline to be used by the other tools (for exact comparison)
bias_csv = [fname '_bias.csv'];
writematrix(baseline, bias_csv);

% Generate .dat and .hea files using mat2wfdb
bit_res = 16;
adu = 'mV';
info = 'Generated by mat2wfdb in MATLAB after scaling';
isquant = 1;
isdigital = 1;
[signal_mat2wfdb_digital, gains_mat2wfdb_digital, baseline_mat2wfdb_digital] = mat2wfdb(double(signal_quant)', [fname, '_mat2wfdb_digital'], sampling_rate, bit_res, adu, info, gains, channel_names, baseline, isquant, isdigital);
% inits = signal_quant(:, 1)
% checksum = sum(signal_quant, 2)

T = size(signal, 2);
signal_quant_rec = (double(signal_mat2wfdb_digital) - repmat(double(baseline_mat2wfdb_digital), T, 1)) ./ repmat(gains_mat2wfdb_digital, T, 1);

error_digital = signal_quant_rec - double(signal');
figure
plot(error_digital);
grid
title('reconstruction error of mat2wfdb using explicit gain/baseline');


% Generate .dat and .hea files using mat2wfdb
bit_res = 16;
adu = 'mV';
info = 'Generated by mat2wfdb in MATLAB';
isquant2 = 0;
isdigital2 = 0;
gains2 = [];
baseline2 = [];
[signal_mat2wfdb, gains_mat2wfdb, baseline_mat2wfdb] = mat2wfdb(double(signal)', [fname, '_mat2wfdb'], sampling_rate, bit_res, adu, info, gains2, channel_names, baseline2, isquant2, isdigital2);

signal_rec = (double(signal_mat2wfdb) - repmat(double(baseline_mat2wfdb), T, 1)) ./ repmat(gains_mat2wfdb, T, 1);
error = signal_rec - signal';

% error = double(signal_mat2wfdb) - (double(signal)'* diag(gains_mat2wfdb) + ones(size(signal, 2), 1)*double(baseline_mat2wfdb));
figure
plot(error);
grid
title('reconstruction error of mat2wfdb using auto gain/baseline');
